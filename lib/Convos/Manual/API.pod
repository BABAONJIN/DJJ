=head1 NAME

Convos API specification

=head1 VERSION

0.87

=head1 DESCRIPTION

This document describes the API for Convos, a multiuser persistent IRC proxy with web interface.

=head1 TERMS OF SERVICE

SSL (HTTPS) is highly suggested, since login credentials and session cookies are transmitted over this API.

=head1 BASEURL

L<http://demo.convos.by/1.0>

=head1 RESOURCES

=head2 commandList

Get list of available ommands.

=head3 Resource URL

  GET http://demo.convos.by/1.0/commands

=head3 Parameters

This resource takes no parameters.

=head3 Responses

=head4 200 - OK

List of commands.

  {
    "commands":     {
      "command": string, // A command to be sent to backend
      "id": string, // jhthorsen: Cannot remember what 'id' is.
    },
  },

=head4 Default

Error.

  {
    "errors":     [
      {
        "message": string, // Human readable description of the error
        "path": string, // JSON pointer to the input data where the error occur
      },
      ...
    ]
  },

=head2 connection

Get information about a connection.

=head3 Resource URL

  GET http://demo.convos.by/1.0/connection/{protocol}/{connection_name}

=head3 Parameters

  .--------------------------------------------------------------------------------------.
  | Name             | In     | Type   | Required | Description                          |
  |--------------------------------------------------------------------------------------|
  | connection_name  | path   | string | Yes      | A friendly name of the server        |
  | protocol         | path   | string | Yes      | The name of the connection protocol. |
  | X-Convos-Session | header | string | No       | TODO. Use cookies for now.           |
  '--------------------------------------------------------------------------------------'

=head3 Responses

=head4 200 - OK

A single connection.

  {
    "name": string, // Name/identifier for this connection
    "path": string, // Unique path to this connection
    "state": string, // Connection state
    "url": uri, // Example: irc://user:pass@irc.perl.org?nick=superman
  },

=head4 Default

Error.

  {
    "errors":     [
      {
        "message": string, // Human readable description of the error
        "path": string, // JSON pointer to the input data where the error occur
      },
      ...
    ]
  },

=head2 connectionAdd

Add a connection.

=head3 Resource URL

  POST http://demo.convos.by/1.0/connections

=head3 Parameters

  .----------------------------------------------------------------------------.
  | Name             | In     | Type   | Required | Description                |
  |----------------------------------------------------------------------------|
  | X-Convos-Session | header | string | No       | TODO. Use cookies for now. |
  | data             | body   | schema | Yes      | No description.            |
  '----------------------------------------------------------------------------'

  data:

  {
    "url": string, // Example: irc://user:pass@irc.perl.org?nick=superman
  },

=head3 Responses

=head4 200 - OK

Connection information.

  {
    "name": string, // Name/identifier for this connection
    "path": string, // Unique path to this connection
    "state": string, // Connection state
    "url": uri, // Example: irc://user:pass@irc.perl.org?nick=superman
  },

=head4 Default

Error.

  {
    "errors":     [
      {
        "message": string, // Human readable description of the error
        "path": string, // JSON pointer to the input data where the error occur
      },
      ...
    ]
  },

=head2 connectionDelete

Delete a connection and all assosiated data.

=head3 Resource URL

  DELETE http://demo.convos.by/1.0/connection/{protocol}/{connection_name}

=head3 Parameters

  .--------------------------------------------------------------------------------------.
  | Name             | In     | Type   | Required | Description                          |
  |--------------------------------------------------------------------------------------|
  | connection_name  | path   | string | Yes      | A friendly name of the server        |
  | protocol         | path   | string | Yes      | The name of the connection protocol. |
  | X-Convos-Session | header | string | No       | TODO. Use cookies for now.           |
  '--------------------------------------------------------------------------------------'

=head3 Responses

=head4 200 - OK

Delete a connection.

  {
    "message": string, // Human readable description
  },

=head4 Default

Error.

  {
    "errors":     [
      {
        "message": string, // Human readable description of the error
        "path": string, // JSON pointer to the input data where the error occur
      },
      ...
    ]
  },

=head2 connectionRooms

Get a list of all available chat rooms.

=head3 Resource URL

  GET http://demo.convos.by/1.0/connection/{protocol}/{connection_name}/rooms

=head3 Parameters

  .--------------------------------------------------------------------------------------.
  | Name             | In     | Type   | Required | Description                          |
  |--------------------------------------------------------------------------------------|
  | connection_name  | path   | string | Yes      | A friendly name of the server        |
  | protocol         | path   | string | Yes      | The name of the connection protocol. |
  | X-Convos-Session | header | string | No       | TODO. Use cookies for now.           |
  '--------------------------------------------------------------------------------------'

=head3 Responses

=head4 200 - OK

List of rooms.

  {
    "rooms":     [
      {
        "name": string, // Name of the room
        "path": string, // Unique path to this room
        "topic": string, // The subjec/topic for this room
        "users":         {
          "name": string, // Name of the user
        },
      },
      ...
    ]
  },

=head4 Default

Internal server error.

  {
    "errors":     [
      {
        "message": string, // Human readable description of the error
        "path": string, // JSON pointer to the input data where the error occur
      },
      ...
    ]
  },

=head2 connectionUpdate

Update a connection.

=head3 Resource URL

  POST http://demo.convos.by/1.0/connection/{protocol}/{connection_name}

=head3 Parameters

  .--------------------------------------------------------------------------------------.
  | Name             | In     | Type   | Required | Description                          |
  |--------------------------------------------------------------------------------------|
  | connection_name  | path   | string | Yes      | A friendly name of the server        |
  | protocol         | path   | string | Yes      | The name of the connection protocol. |
  | X-Convos-Session | header | string | No       | TODO. Use cookies for now.           |
  | data             | body   | schema | Yes      | No description.                      |
  '--------------------------------------------------------------------------------------'

  data:

  {
    "name": string, // Name/identifier for this connection
    "path": string, // Unique path to this connection
    "state": string, // Connection state
    "url": uri, // Example: irc://user:pass@irc.perl.org?nick=superman
  },

=head3 Responses

=head4 200 - OK

Update a connection.

  {
    "name": string, // Name/identifier for this connection
    "path": string, // Unique path to this connection
    "state": string, // Connection state
    "url": uri, // Example: irc://user:pass@irc.perl.org?nick=superman
  },

=head4 Default

Error.

  {
    "errors":     [
      {
        "message": string, // Human readable description of the error
        "path": string, // JSON pointer to the input data where the error occur
      },
      ...
    ]
  },

=head2 connections

Get all the connections for a user.

=head3 Resource URL

  GET http://demo.convos.by/1.0/connections

=head3 Parameters

  .----------------------------------------------------------------------------.
  | Name             | In     | Type   | Required | Description                |
  |----------------------------------------------------------------------------|
  | X-Convos-Session | header | string | No       | TODO. Use cookies for now. |
  '----------------------------------------------------------------------------'

=head3 Responses

=head4 200 - OK

List of connections.

  {
    "connections":     [
      {
        "name": string, // Name/identifier for this connection
        "path": string, // Unique path to this connection
        "state": string, // Connection state
        "url": uri, // Example: irc://user:pass@irc.perl.org?nick=superman
      },
      ...
    ]
  },

=head4 Default

Error.

  {
    "errors":     [
      {
        "message": string, // Human readable description of the error
        "path": string, // JSON pointer to the input data where the error occur
      },
      ...
    ]
  },

=head2 conversationDelete

Remove (part) a conversation.

=head3 Resource URL

  DELETE http://demo.convos.by/1.0/connection/{protocol}/{connection_name}/conversation/{conversation_id}

=head3 Parameters

  .---------------------------------------------------------------------------------------.
  | Name            | In   | Type   | Required | Description                              |
  |---------------------------------------------------------------------------------------|
  | connection_name | path | string | Yes      | A friendly name of the server            |
  | conversation_id | path | string | No       | The name of the person/chat conversation |
  | protocol        | path | string | Yes      | The name of the connection protocol.     |
  '---------------------------------------------------------------------------------------'

=head3 Responses

=head4 200 - OK

A conversation.

  {
    "message": string, // Human readable description
  },

=head4 Default

Internal server error.

  {
    "errors":     [
      {
        "message": string, // Human readable description of the error
        "path": string, // JSON pointer to the input data where the error occur
      },
      ...
    ]
  },

=head2 conversationJoin

Join a conversation.

=head3 Resource URL

  POST http://demo.convos.by/1.0/connection/{protocol}/{connection_name}/conversation/{conversation_id}

=head3 Parameters

  .---------------------------------------------------------------------------------------.
  | Name            | In   | Type   | Required | Description                              |
  |---------------------------------------------------------------------------------------|
  | connection_name | path | string | Yes      | A friendly name of the server            |
  | conversation_id | path | string | No       | The name of the person/chat conversation |
  | protocol        | path | string | Yes      | The name of the connection protocol.     |
  '---------------------------------------------------------------------------------------'

=head3 Responses

=head4 200 - OK

A conversation.

  {
    "name": string, // Name of the room
    "path": string, // Unique path to this room
    "topic": string, // The subjec/topic for this room
    "users":     {
      "name": string, // Name of the user
    },
  },

=head4 Default

Internal server error.

  {
    "errors":     [
      {
        "message": string, // Human readable description of the error
        "path": string, // JSON pointer to the input data where the error occur
      },
      ...
    ]
  },

=head2 conversationMessages

Get a list of messages.

Note: this resource require the user to be authenticated first.

=head3 Resource URL

  GET http://demo.convos.by/1.0/connection/{protocol}/{connection_name}/conversation/{conversation_id}/messages

=head3 Parameters

  .------------------------------------------------------------------------------------------------.
  | Name            | In    | Type    | Required | Description                                     |
  |------------------------------------------------------------------------------------------------|
  | connection_name | path  | string  | Yes      | A friendly name of the server                   |
  | conversation_id | path  | string  | No       | The name of the person/chat conversation        |
  | protocol        | path  | string  | Yes      | The name of the connection protocol.            |
  | after           | query | string  | No       | Find messages after a given ISO 8601 timestamp  |
  | before          | query | string  | No       | Find messages before a given ISO 8601 timestamp |
  | level           | query | string  | No       | debug, info (default), warn, error              |
  | limit           | query | integer | No       | Max number of messages to retrieve              |
  | match           | query | string  | No       | Messages must match this string                 |
  '------------------------------------------------------------------------------------------------'

=head3 Responses

=head4 200 - OK

List of messages.

  {
    "messages":     [
      {
        "avatar": uri, // Location to an image which can be used as avatar
        "level": string, // How important this message is
        "message": string, // The message
        "sender": string, // Identifier for the sender on the chat server
        "timestamp": datetime, // Example: 2015-09-06T13:49:37Z
      },
      ...
    ]
  },

=head4 Default

Internal server error.

  {
    "errors":     [
      {
        "message": string, // Human readable description of the error
        "path": string, // JSON pointer to the input data where the error occur
      },
      ...
    ]
  },

=head2 conversationSend

Send a message to a target.

=head3 Resource URL

  POST http://demo.convos.by/1.0/connection/{protocol}/{connection_name}/conversation/{conversation_id}/send

=head3 Parameters

  .------------------------------------------------------------------------------------------.
  | Name             | In     | Type   | Required | Description                              |
  |------------------------------------------------------------------------------------------|
  | connection_name  | path   | string | Yes      | A friendly name of the server            |
  | conversation_id  | path   | string | No       | The name of the person/chat conversation |
  | protocol         | path   | string | Yes      | The name of the connection protocol.     |
  | X-Convos-Session | header | string | No       | TODO. Use cookies for now.               |
  '------------------------------------------------------------------------------------------'

=head3 Responses

=head4 200 - OK

No description.

  {
    "command": string, // A command to be sent to backend
    "id": string, // jhthorsen: Cannot remember what 'id' is.
  },

=head4 Default

Error.

  {
    "errors":     [
      {
        "message": string, // Human readable description of the error
        "path": string, // JSON pointer to the input data where the error occur
      },
      ...
    ]
  },

=head2 conversations

Get a list of all conversations.

=head3 Resource URL

  GET http://demo.convos.by/1.0/conversations

=head3 Parameters

  .----------------------------------------------------------------------------.
  | Name             | In     | Type   | Required | Description                |
  |----------------------------------------------------------------------------|
  | X-Convos-Session | header | string | No       | TODO. Use cookies for now. |
  '----------------------------------------------------------------------------'

=head3 Responses

=head4 200 - OK

List of messages.

  {
    "conversations":     [
      {
        "name": string, // Name of the room
        "path": string, // Unique path to this room
        "topic": string, // The subjec/topic for this room
        "users":         {
          "name": string, // Name of the user
        },
      },
      ...
    ]
  },

=head4 Default

Internal server error.

  {
    "errors":     [
      {
        "message": string, // Human readable description of the error
        "path": string, // JSON pointer to the input data where the error occur
      },
      ...
    ]
  },

=head2 notificationSeen

Mark a notication as seen.

TODO: Notification count vs red/green toggling of a single notification.

=head3 Resource URL

  POST http://demo.convos.by/1.0/notifications/seen

=head3 Parameters

  .----------------------------------------------------------------------------.
  | Name             | In     | Type   | Required | Description                |
  |----------------------------------------------------------------------------|
  | X-Convos-Session | header | string | No       | TODO. Use cookies for now. |
  | data             | body   | schema | Yes      | No description.            |
  '----------------------------------------------------------------------------'

  data:

  {
  },

=head3 Responses

=head4 200 - OK

List of commands.

  {
  },

=head4 Default

Error.

  {
    "errors":     [
      {
        "message": string, // Human readable description of the error
        "path": string, // JSON pointer to the input data where the error occur
      },
      ...
    ]
  },

=head2 notifications

Get list of notications.

A notification is added once your name is mentioned in a chat or someone sends a direct message.

=head3 Resource URL

  GET http://demo.convos.by/1.0/notifications

=head3 Parameters

  .----------------------------------------------------------------------------.
  | Name             | In     | Type   | Required | Description                |
  |----------------------------------------------------------------------------|
  | X-Convos-Session | header | string | No       | TODO. Use cookies for now. |
  '----------------------------------------------------------------------------'

=head3 Responses

=head4 200 - OK

List of commands.

  {
    "notifications":     [
      {
        "id": string, // Identifier used when marking this as seen
        "message": string, // The message that resulted in a notification
        "timestamp": datetime, // Example: 2015-09-06T10:47:31Z
      },
      ...
    ]
  },

=head4 Default

Error.

  {
    "errors":     [
      {
        "message": string, // Human readable description of the error
        "path": string, // JSON pointer to the input data where the error occur
      },
      ...
    ]
  },

=head2 user

Get user data.

=head3 Resource URL

  GET http://demo.convos.by/1.0/user

=head3 Parameters

  .----------------------------------------------------------------------------.
  | Name             | In     | Type   | Required | Description                |
  |----------------------------------------------------------------------------|
  | X-Convos-Session | header | string | No       | TODO. Use cookies for now. |
  '----------------------------------------------------------------------------'

=head3 Responses

=head4 200 - OK

User profile.

  {
    "avatar": string, // Either an URL or a value that can be translated into an URL by Convos, such as gravatar ID
    "email": string, // Unique email identifying a user in Convos
    "registered": datetime, // Example: 2015-09-06T10:47:31Z
  },

=head4 Default

Error.

  {
    "errors":     [
      {
        "message": string, // Human readable description of the error
        "path": string, // JSON pointer to the input data where the error occur
      },
      ...
    ]
  },

=head2 userDelete

Delete a user.

=head3 Resource URL

  DELETE http://demo.convos.by/1.0/user

=head3 Parameters

  .----------------------------------------------------------------------------.
  | Name             | In     | Type   | Required | Description                |
  |----------------------------------------------------------------------------|
  | X-Convos-Session | header | string | No       | TODO. Use cookies for now. |
  '----------------------------------------------------------------------------'

=head3 Responses

=head4 200 - OK

Successfully deleted.

  {
    "message": string, // Human readable description
  },

=head4 Default

Error.

  {
    "errors":     [
      {
        "message": string, // Human readable description of the error
        "path": string, // JSON pointer to the input data where the error occur
      },
      ...
    ]
  },

=head2 userLogin

Log in a user based on email and password.

=head3 Resource URL

  POST http://demo.convos.by/1.0/user/login

=head3 Parameters

  .---------------------------------------------------.
  | Name | In   | Type   | Required | Description     |
  |---------------------------------------------------|
  | data | body | schema | Yes      | No description. |
  '---------------------------------------------------'

  data:

  {
    "email": email, // User email
    "password": string, // User password
  },

=head3 Responses

=head4 200 - OK

User profile.

  {
    "avatar": string, // Either an URL or a value that can be translated into an URL by Convos, such as gravatar ID
    "email": string, // Unique email identifying a user in Convos
    "registered": datetime, // Example: 2015-09-06T10:47:31Z
  },

=head4 Default

Error.

  {
    "errors":     [
      {
        "message": string, // Human readable description of the error
        "path": string, // JSON pointer to the input data where the error occur
      },
      ...
    ]
  },

=head2 userLogout

Logout a user.

This resource will delete any sessions cookies that might be stored in the client.

=head3 Resource URL

  GET http://demo.convos.by/1.0/user/logout

=head3 Parameters

This resource takes no parameters.

=head3 Responses

=head4 200 - OK

Successfully logged out.

  {
    "message": string, // Human readable description
  },

=head4 Default

Error.

  {
    "errors":     [
      {
        "message": string, // Human readable description of the error
        "path": string, // JSON pointer to the input data where the error occur
      },
      ...
    ]
  },

=head2 userRegister

Register a new user.

=head3 Resource URL

  POST http://demo.convos.by/1.0/user/register

=head3 Parameters

  .---------------------------------------------------.
  | Name | In   | Type   | Required | Description     |
  |---------------------------------------------------|
  | data | body | schema | Yes      | No description. |
  '---------------------------------------------------'

  data:

  {
    "avatar": string, // User avatar
    "email": email, // User email
    "password": string, // User password
  },

=head3 Responses

=head4 200 - OK

User profile.

  {
    "avatar": string, // Either an URL or a value that can be translated into an URL by Convos, such as gravatar ID
    "email": string, // Unique email identifying a user in Convos
    "registered": datetime, // Example: 2015-09-06T10:47:31Z
  },

=head4 Default

Error.

  {
    "errors":     [
      {
        "message": string, // Human readable description of the error
        "path": string, // JSON pointer to the input data where the error occur
      },
      ...
    ]
  },

=head2 userSave

Update an existing user.

=head3 Resource URL

  POST http://demo.convos.by/1.0/user

=head3 Parameters

  .----------------------------------------------------------------------------.
  | Name             | In     | Type   | Required | Description                |
  |----------------------------------------------------------------------------|
  | X-Convos-Session | header | string | No       | TODO. Use cookies for now. |
  | data             | body   | schema | Yes      | No description.            |
  '----------------------------------------------------------------------------'

  data:

  {
    "avatar": string, // User avatar
    "password": string, // User password
  },

=head3 Responses

=head4 200 - OK

User profile.

  {
    "avatar": string, // Either an URL or a value that can be translated into an URL by Convos, such as gravatar ID
    "email": string, // Unique email identifying a user in Convos
    "registered": datetime, // Example: 2015-09-06T10:47:31Z
  },

=head4 Default

Error.

  {
    "errors":     [
      {
        "message": string, // Human readable description of the error
        "path": string, // JSON pointer to the input data where the error occur
      },
      ...
    ]
  },

=head1 COPYRIGHT AND LICENSE

Convos - https://github.com/Nordaaker/convos

Artistic License version 2.0 - http://opensource.org/licenses/Artistic-2.0

=cut
