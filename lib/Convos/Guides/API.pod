=head1 NAME

Convos API specification

=head1 VERSION

0.87

=head1 DESCRIPTION

This document describes the API for Convos, a multiuser persistent IRC proxy with web interface.

=head1 TERMS OF SERVICE

SSL (HTTPS) is highly suggested, since login credentials and session cookies are transmitted over this API.

=head1 BASEURL

L<http://demo.convos.by/api>

=head1 RESOURCES

=head2 createConnection

Add a connection.

=head3 Resource URL

  POST http://demo.convos.by/api/connections

=head3 Parameters

  .---------------------------------------------------.
  | Name | In   | Type   | Required | Description     |
  |---------------------------------------------------|
  | body | body | schema | Yes      | No description. |
  '---------------------------------------------------'

  body:

  {
    "url": string, // Example: irc://user:pass@irc.perl.org?nick=superman
  },

=head3 Responses

=head4 200 - OK

Connection information.

  {
    "id": string, // Unique identifier for this connection
    "name": string, // Name for this connection
    "state": string, // Connection state
    "url": uri, // Example: irc://user:pass@irc.perl.org?nick=superman
  },

=head4 Default

Error.

  {
    "errors":     [
      {
        "message": string, // Human readable description of the error
        "path": string, // JSON pointer to the input data where the error occur
      },
      ...
    ]
  },

=head2 deleteUser

Delete a user.

=head3 Resource URL

  DELETE http://demo.convos.by/api/user

=head3 Parameters

This resource takes no parameters.

=head3 Responses

=head4 200 - OK

Successfully deleted.

  {
    "message": string, // Human readable description
  },

=head4 Default

Error.

  {
    "errors":     [
      {
        "message": string, // Human readable description of the error
        "path": string, // JSON pointer to the input data where the error occur
      },
      ...
    ]
  },

=head2 getUser

Get user data.

=head3 Resource URL

  GET http://demo.convos.by/api/user

=head3 Parameters

This resource takes no parameters.

=head3 Responses

=head4 200 - OK

User profile.

  {
    "email": string, // Unique email identifying a user in Convos
    "registered": datetime, // Example: 2015-09-06T10:47:31Z
  },

=head4 Default

Error.

  {
    "errors":     [
      {
        "message": string, // Human readable description of the error
        "path": string, // JSON pointer to the input data where the error occur
      },
      ...
    ]
  },

=head2 infoFromUrl

Get information from a URL

=head3 Resource URL

  GET http://demo.convos.by/api/embed

=head3 Parameters

  .----------------------------------------------------.
  | Name | In    | Type   | Required | Description     |
  |----------------------------------------------------|
  | url  | query | string | Yes      | URL to resource |
  '----------------------------------------------------'

=head3 Responses

=head4 200 - OK

Information about resource.

  {
  },

=head4 Default

Error.

  {
    "errors":     [
      {
        "message": string, // Human readable description of the error
        "path": string, // JSON pointer to the input data where the error occur
      },
      ...
    ]
  },

=head2 listConnections

Get all the connections for a user.

=head3 Resource URL

  GET http://demo.convos.by/api/connections

=head3 Parameters

This resource takes no parameters.

=head3 Responses

=head4 200 - OK

List of connections.

  {
    "connections":     [
      {
        "id": string, // Unique identifier for this connection
        "name": string, // Name for this connection
        "state": string, // Connection state
        "url": uri, // Example: irc://user:pass@irc.perl.org?nick=superman
      },
      ...
    ]
  },

=head4 Default

Error.

  {
    "errors":     [
      {
        "message": string, // Human readable description of the error
        "path": string, // JSON pointer to the input data where the error occur
      },
      ...
    ]
  },

=head2 listDialogs

Get a list of all dialogs.

=head3 Resource URL

  GET http://demo.convos.by/api/dialogs

=head3 Parameters

This resource takes no parameters.

=head3 Responses

=head4 200 - OK

List of messages.

  {
    "dialogs":     [
      {
        "connection_id": string, // Unique identifier for the connection this dialog is part of
        "name": string, // Name of the room or person
        "topic": string, // The subjec/topic for this room
      },
      ...
    ]
  },

=head4 Default

Internal server error.

  {
    "errors":     [
      {
        "message": string, // Human readable description of the error
        "path": string, // JSON pointer to the input data where the error occur
      },
      ...
    ]
  },

=head2 listNotifications

Get list of notications.

A notification is added once your name is mentioned in a chat or someone sends a direct message.

=head3 Resource URL

  GET http://demo.convos.by/api/notifications

=head3 Parameters

This resource takes no parameters.

=head3 Responses

=head4 200 - OK

List of commands.

  {
    "notifications":     [
      {
        "id": string, // Identifier used when marking this as seen
        "message": string, // The message that resulted in a notification
        "ts": datetime, // Example: 2015-09-06T10:47:31Z
      },
      ...
    ]
  },

=head4 Default

Error.

  {
    "errors":     [
      {
        "message": string, // Human readable description of the error
        "path": string, // JSON pointer to the input data where the error occur
      },
      ...
    ]
  },

=head2 loginUser

Log in a user based on email and password.

=head3 Resource URL

  POST http://demo.convos.by/api/user/login

=head3 Parameters

  .---------------------------------------------------.
  | Name | In   | Type   | Required | Description     |
  |---------------------------------------------------|
  | body | body | schema | Yes      | No description. |
  '---------------------------------------------------'

  body:

  {
    "email": email, // User email
    "password": string, // User password
  },

=head3 Responses

=head4 200 - OK

User profile.

  {
    "email": string, // Unique email identifying a user in Convos
    "registered": datetime, // Example: 2015-09-06T10:47:31Z
  },

=head4 Default

Error.

  {
    "errors":     [
      {
        "message": string, // Human readable description of the error
        "path": string, // JSON pointer to the input data where the error occur
      },
      ...
    ]
  },

=head2 logoutUser

Logout a user.

This resource will delete any sessions cookies that might be stored in the client.

=head3 Resource URL

  GET http://demo.convos.by/api/user/logout

=head3 Parameters

This resource takes no parameters.

=head3 Responses

=head4 200 - OK

Successfully logged out.

  {
    "message": string, // Human readable description
  },

=head4 Default

Error.

  {
    "errors":     [
      {
        "message": string, // Human readable description of the error
        "path": string, // JSON pointer to the input data where the error occur
      },
      ...
    ]
  },

=head2 messagesByDialog

Get a list of messages.

Note: this resource require the user to be authenticated first.

=head3 Resource URL

  GET http://demo.convos.by/api/connection/{connection_id}/dialog/{dialog_id}/messages

=head3 Parameters

  .----------------------------------------------------------------------------------------------.
  | Name          | In    | Type    | Required | Description                                     |
  |----------------------------------------------------------------------------------------------|
  | connection_id | path  | string  | Yes      | A unique connection identifier                  |
  | dialog_id     | path  | string  | Yes      | The name of the person or room                  |
  | after         | query | string  | No       | Find messages after a given ISO 8601 timestamp  |
  | before        | query | string  | No       | Find messages before a given ISO 8601 timestamp |
  | level         | query | string  | No       | debug, info (default), warn, error              |
  | limit         | query | integer | No       | Max number of messages to retrieve              |
  | match         | query | string  | No       | Messages must match this string                 |
  '----------------------------------------------------------------------------------------------'

=head3 Responses

=head4 200 - OK

List of messages.

  {
    "messages":     [
      {
        "from": string, // Identifier for who sent this message
        "level": string, // How important this message is
        "message": string, // The message
        "ts": datetime, // Example: 2015-09-06T13:49:37Z
      },
      ...
    ]
  },

=head4 Default

Internal server error.

  {
    "errors":     [
      {
        "message": string, // Human readable description of the error
        "path": string, // JSON pointer to the input data where the error occur
      },
      ...
    ]
  },

=head2 participantsInDialog

Get a list of participants.

Note: this resource require the user to be authenticated first.

=head3 Resource URL

  GET http://demo.convos.by/api/connection/{connection_id}/dialog/{dialog_id}/participants

=head3 Parameters

  .---------------------------------------------------------------------------.
  | Name          | In   | Type   | Required | Description                    |
  |---------------------------------------------------------------------------|
  | connection_id | path | string | Yes      | A unique connection identifier |
  | dialog_id     | path | string | Yes      | The name of the person or room |
  '---------------------------------------------------------------------------'

=head3 Responses

=head4 200 - OK

List of participants.

  {
    "participants":     [// required
      {
        "mode": string, // No description.
        "name": string, // required
      },
      ...
    ]
  },

=head4 Default

Internal server error.

  {
    "errors":     [
      {
        "message": string, // Human readable description of the error
        "path": string, // JSON pointer to the input data where the error occur
      },
      ...
    ]
  },

=head2 registerUser

Register a new user.

=head3 Resource URL

  POST http://demo.convos.by/api/user/register

=head3 Parameters

  .---------------------------------------------------.
  | Name | In   | Type   | Required | Description     |
  |---------------------------------------------------|
  | body | body | schema | Yes      | No description. |
  '---------------------------------------------------'

  body:

  {
    "email": email, // User email
    "password": string, // User password
  },

=head3 Responses

=head4 200 - OK

User profile.

  {
    "email": string, // Unique email identifying a user in Convos
    "registered": datetime, // Example: 2015-09-06T10:47:31Z
  },

=head4 Default

Error.

  {
    "errors":     [
      {
        "message": string, // Human readable description of the error
        "path": string, // JSON pointer to the input data where the error occur
      },
      ...
    ]
  },

=head2 removeConnection

Delete a connection and all assosiated data.

=head3 Resource URL

  DELETE http://demo.convos.by/api/connection/{connection_id}

=head3 Parameters

  .---------------------------------------------------------------------------.
  | Name          | In   | Type   | Required | Description                    |
  |---------------------------------------------------------------------------|
  | connection_id | path | string | Yes      | A unique connection identifier |
  '---------------------------------------------------------------------------'

=head3 Responses

=head4 200 - OK

Remove a connection.

  {
    "message": string, // Human readable description
  },

=head4 Default

Error.

  {
    "errors":     [
      {
        "message": string, // Human readable description of the error
        "path": string, // JSON pointer to the input data where the error occur
      },
      ...
    ]
  },

=head2 roomsByConnection

Get a list of all available chat rooms.

=head3 Resource URL

  GET http://demo.convos.by/api/connection/{connection_id}/rooms

=head3 Parameters

  .---------------------------------------------------------------------------.
  | Name          | In   | Type   | Required | Description                    |
  |---------------------------------------------------------------------------|
  | connection_id | path | string | Yes      | A unique connection identifier |
  '---------------------------------------------------------------------------'

=head3 Responses

=head4 200 - OK

List of rooms.

  {
    "rooms":     [
      {
        "name": string, // Name of the room or person
        "topic": string, // The subjec/topic for this room
      },
      ...
    ]
  },

=head4 Default

Internal server error.

  {
    "errors":     [
      {
        "message": string, // Human readable description of the error
        "path": string, // JSON pointer to the input data where the error occur
      },
      ...
    ]
  },

=head2 seenNotification

Mark a notication as seen.

TODO: Notification count vs red/green toggling of a single notification.

=head3 Resource URL

  POST http://demo.convos.by/api/notifications/seen

=head3 Parameters

  .---------------------------------------------------.
  | Name | In   | Type   | Required | Description     |
  |---------------------------------------------------|
  | body | body | schema | Yes      | No description. |
  '---------------------------------------------------'

  body:

  {
    "ids": integer, // A list of notification IDs to mark as seen/read
  },

=head3 Responses

=head4 200 - OK

List of commands.

  {
  },

=head4 Default

Error.

  {
    "errors":     [
      {
        "message": string, // Human readable description of the error
        "path": string, // JSON pointer to the input data where the error occur
      },
      ...
    ]
  },

=head2 sendEvents

Send a message or command.

=head3 Resource URL

  POST http://demo.convos.by/api/send

=head3 Parameters

  .---------------------------------------------------.
  | Name | In   | Type   | Required | Description     |
  |---------------------------------------------------|
  | body | body | schema | Yes      | No description. |
  '---------------------------------------------------'

  body:

  {
    "command": string, // A command to be sent to backend
    "connection_id": string, // Connection ID
    "dialog_id": string, // Dialog ID
  },

=head3 Responses

=head4 200 - OK

Successfully sent a message

  {
    "type":   },

=head4 Default

Error.

  {
    "errors":     [
      {
        "message": string, // Human readable description of the error
        "path": string, // JSON pointer to the input data where the error occur
      },
      ...
    ]
  },

=head2 updateConnection

Update a connection.

=head3 Resource URL

  POST http://demo.convos.by/api/connection/{connection_id}

=head3 Parameters

  .---------------------------------------------------------------------------.
  | Name          | In   | Type   | Required | Description                    |
  |---------------------------------------------------------------------------|
  | connection_id | path | string | Yes      | A unique connection identifier |
  | body          | body | schema | Yes      | No description.                |
  '---------------------------------------------------------------------------'

  body:

  {
    "state": string, // Connection state
    "url": uri, // Example: irc://user:pass@irc.perl.org?nick=superman
  },

=head3 Responses

=head4 200 - OK

Update a connection.

  {
    "id": string, // Unique identifier for this connection
    "name": string, // Name for this connection
    "state": string, // Connection state
    "url": uri, // Example: irc://user:pass@irc.perl.org?nick=superman
  },

=head4 Default

Error.

  {
    "errors":     [
      {
        "message": string, // Human readable description of the error
        "path": string, // JSON pointer to the input data where the error occur
      },
      ...
    ]
  },

=head2 updateUser

Update an existing user.

=head3 Resource URL

  POST http://demo.convos.by/api/user

=head3 Parameters

  .---------------------------------------------------.
  | Name | In   | Type   | Required | Description     |
  |---------------------------------------------------|
  | body | body | schema | Yes      | No description. |
  '---------------------------------------------------'

  body:

  {
    "password": string, // User password
  },

=head3 Responses

=head4 200 - OK

User profile.

  {
    "email": string, // Unique email identifying a user in Convos
    "registered": datetime, // Example: 2015-09-06T10:47:31Z
  },

=head4 Default

Error.

  {
    "errors":     [
      {
        "message": string, // Human readable description of the error
        "path": string, // JSON pointer to the input data where the error occur
      },
      ...
    ]
  },

=head1 COPYRIGHT AND LICENSE

Convos - https://github.com/Nordaaker/convos

Artistic License version 2.0 - http://opensource.org/licenses/Artistic-2.0

=cut
